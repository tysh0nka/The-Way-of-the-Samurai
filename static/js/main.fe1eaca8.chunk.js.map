{"version":3,"sources":["components/Profile/Profile.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/Subscriptions/Subscriptions.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Posts.module.css","components/Nav/Nav.module.css","components/Profile/Subscriptions/MyFriends/MyFriends.module.css","components/Users/Users.module.css","components/AppRoutes/AppRoutes.module.css","components/Profile/ProfileInfo/EditPhoto/EditPhoto.module.css","components/Nav/Nav.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","redux/api/api.ts","redux/usersReducer.tsx","components/Users/Users.tsx","components/Users/loader.svg","components/Users/UsersApiComponent.tsx","components/Users/UsersContainer.tsx","redux/authReducer.ts","components/Login/LoginForm.tsx","components/Login/Login.tsx","commons/EditableSpan/EditableSpan.tsx","redux/profileReducer.ts","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/EditPhoto/EditPhoto.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Subscriptions/MyFriends/MyFriends.tsx","components/Profile/Subscriptions/Subscriptions.tsx","components/Profile/MyPosts/Post/Posts.tsx","components/Profile/MyPosts/Post/AddPost.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","redux/dialogsReducer.tsx","components/Dialogs/AddMessage.tsx","components/Dialogs/Dialogs.tsx","components/AppRoutes/AppRoutes.tsx","components/Header/Header.tsx","components/App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["module","exports","Nav","id","useSelector","state","auth","className","style","nav","navBlock","to","News","Music","Settings","instance","axios","create","withCredentials","baseURL","headers","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","friends","followAC","userID","type","unFollowAC","setCountPageAC","value","toggleIsFetchingAC","getUsersTC","dispatch","get","then","r","data","getUsers","items","totalCount","getFriendsTC","UnfollowUsersTC","delete","UnfollowUsers","resultCode","followUsersTC","post","followUsers","Users","props","pageCount","Math","ceil","pages","i","push","useState","disabled","map","p","onClick","onPageChanged","classes","m","src","photos","large","alt","followed","unFollow","follow","name","status","UsersApiComponent","pageNumber","this","ifFetching","loader","followUserTC","Component","connect","usersPage","setCurrentPage","UsersC","login","email","isAuth","setUserData","payload","setUserDataTC","loginTC","password","rememberMe","authLogin","res","logoutTC","LoginForm","useDispatch","formik","useFormik","initialValues","validate","values","errors","test","length","onSubmit","handleSubmit","placeholder","onChange","handleChange","onBlur","handleBlur","touched","color","checked","Login","navigate","useNavigate","EditableSpan","editMode","setEditMode","title","setTitle","e","currentTarget","autoFocus","onDoubleClick","profile","posts","message","likesCount","setUserProfileTC","userId","console","log","changeStatusAC","changeStatusTC","put","changeStatus","getStatusTC","getStatus","ProfileStatus","myId","useParams","profilePage","EditPhoto","editPhoto","target","files","photo","formData","FormData","append","changePhoto","s","ProfileInfo","profileInfo","imgContent2","info","fullName","MyFriends","styles","myFriend","img","Subscriptions","useEffect","myFriends","filter","f","index","subBlock","all","href","Posts","postBlock","imgPost","AddPost","setPost","width","resize","height","borderRadius","position","marginTop","newPost","MyPosts","postsElements","sMyPost","sProfile","myPost","Profile","DialogItem","dialogsItems","isActive","dialog","Message","messages","dialogs","AddMessage","newMessage","setNewMessage","SendActionCreate","Dialogs","dialogElements","dialogsPage","messagesElements","AppRoutes","main","path","element","UsersContainer","Header","header","headerContainer","loginBlock","logout","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","newState","Date","now","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,MAAQ,uBAAuB,YAAc,6BAA6B,KAAO,wB,mBCAjLD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,QAAU,yBAAyB,WAAa,4BAA4B,OAAS,0B,mBCA5ND,EAAOC,QAAU,CAAC,UAAY,2BAA2B,OAAS,wBAAwB,KAAO,sBAAsB,MAAQ,uBAAuB,MAAQ,yB,mBCA9JD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,MAAQ,6BAA6B,UAAY,iCAAiC,IAAM,6B,mBCArJD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,gBAAkB,gCAAgC,WAAa,2BAA2B,OAAS,yB,wCCArJD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,QAAU,uBAAuB,QAAU,yB,mBCAlGD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,SAAW,wB,mBCApDD,EAAOC,QAAU,CAAC,SAAW,4BAA4B,IAAM,yB,mBCA/DD,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,UAAY,+B,4ICqCfC,MA9Bf,WAEI,IAAMC,EAAKC,aAAyC,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,MAExE,OACI,qBAAKI,UAAWC,IAAMC,IAAtB,SACI,sBAAKF,UAAWC,IAAME,SAAtB,UACI,8BACI,cAAC,IAAD,CAASC,GAAE,mBAAcR,GAAzB,uBAEJ,8BACI,cAAC,IAAD,CAASQ,GAAI,WAAb,wBAEJ,8BACI,cAAC,IAAD,CAASA,GAAI,QAAb,oBAEJ,8BACI,cAAC,IAAD,CAASA,GAAI,SAAb,qBAEJ,8BACI,cAAC,IAAD,CAASA,GAAI,YAAb,wBAEJ,8BACI,cAAC,IAAD,CAASA,GAAI,SAAb,2B,OCrBLC,EARF,WACT,OACI,qBAAKL,UAAW,UAAhB,SACI,yCCKGM,EARD,WACV,OACI,qBAAKN,UAAW,UAAhB,SACG,0CCKIO,EARE,WACb,OACI,8BACI,6C,uBCHNC,E,OAAWC,EAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CCUbC,EAAe,CACjBC,MAAO,GACPC,SAAU,GACVC,gBAAiB,EACjBC,YAAa,EACbC,YAAY,EACZC,QAAS,IA8CAC,EAAW,SAACC,GAAD,MAAkB,CAACC,KAAM,SAAUD,WAC9CE,EAAa,SAACF,GAAD,MAAkB,CAACC,KAAM,WAAYD,WAElDG,EAAiB,SAACC,GAAD,MAAoB,CAACH,KAAM,iBAAkBG,UAE9DC,EAAqB,SAACR,GAAD,MAA0B,CAACI,KAAM,qBAAsBJ,eAG5ES,EAAa,SAACV,EAAoBF,GAC3C,OAAO,SAACa,GACJA,EAASF,GAAmB,IAC5BE,EAASJ,EAAeP,IDlEP,WAAsD,IAArDA,EAAoD,uDAA9B,EAAGF,EAA2B,uDAAR,GAClE,OAAOR,EAASsB,IAAT,qBAA2BZ,EAA3B,kBAAgDF,IAAYe,MAAK,SAAAC,GAChE,OAAOA,EAAEC,QCiEbC,CAAShB,EAAaF,GAAUe,MAAK,SAAAE,GACjCJ,EAX4C,CAACN,KAAM,QAASR,MAWxCkB,EAAKE,QACzBN,EAV4C,CAACN,KAAM,kBAAmBa,WAU7CH,EAAKG,aAC9BP,EAASF,GAAmB,SAM3BU,EAAe,kBAAM,SAACR,GDrExBrB,EAASsB,IAAT,wBAA6B,IAAQC,MAAK,SAAAC,GAC7C,OAAOA,EAAEC,QCqEAF,MAAK,SAAAE,GACdJ,EAjBoD,CAACN,KAAM,UAAWH,QAiBhDa,EAAKE,aAKtBG,EAAkB,SAAC1C,GAC5B,OAAO,SAACiC,IDjEiB,SAACjC,GAC1B,OAAQY,EAAS+B,OAAT,iBAA0B3C,IAAMmC,MAAK,SAAAC,GACzC,OAAOA,EAAEC,SCgETO,CAAc5C,GAAImC,MAAK,SAAAE,GACK,IAApBA,EAAKQ,aACNZ,EAASL,EAAW5B,IACnBiC,EAASF,GAAmB,UAM/Be,EAAgB,SAAC9C,GAC9B,OAAO,SAACiC,IDnFmB,SAACjC,GACxB,OAAQY,EAASmC,KAAT,iBAAwB/C,GAAM,IAAImC,MAAK,SAAAC,GAC3C,OAAOA,EAAEC,SCkFbW,CAAYhD,GAAImC,MAAK,SAAAE,GACO,IAApBA,EAAKQ,YACLZ,EAASR,EAASzB,S,wDC9CfiD,MAjDf,SAAeC,GAIX,IAFA,IAAIC,EAAYC,KAAKC,KAAKH,EAAM7B,gBAAkB6B,EAAM9B,UACpDkC,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,GAAaI,EAAI,GAAIA,IACtCD,EAAME,KAAKD,GAGf,MAAgCE,mBAAS,GAAzC,mBAAOC,EAAP,KAEA,OAFA,KAGI,gCACI,8BACKJ,EAAMK,KAAI,SAAAC,GAAC,OACR,sBAAMC,QAAS,WACXX,EAAMY,cAAcF,IACrBxD,UAAW8C,EAAM5B,cAAgBsC,EAAIG,IAAQZ,UAAY,GAF5D,SAEiES,SAGxEV,EAAM/B,MAAMwC,KAAI,SAAAK,GAAC,OACd,gCACI,iCACI,cAAC,IAAD,CAASxD,GAAE,mBAAcwD,EAAEhE,IAA3B,SACI,8BACA,qBAAKI,UAAW,iBACX6D,IAAwB,OAAnBD,EAAEE,OAAOC,MAAiB,mDAAqDH,EAAEE,OAAOC,MAC7FC,IAAK,SAGd,8BACIJ,EAAEK,SAAW,wBAAQX,SAAUA,IAAaM,EAAEhE,GAAI6D,QAAS,WACxDX,EAAMoB,SAASN,EAAEhE,KADP,sBAGS,wBAAQ0D,SAAUA,IAAaM,EAAEhE,GAAI6D,QAAS,WACjEX,EAAMqB,OAAOP,EAAEhE,KADI,yBAK9B,iCACI,8BAAMgE,EAAEQ,OACR,8BAAMR,EAAES,YAEZ,2BAtBMT,EAAEhE,WCpCb,MAA0B,mCCOnC0E,E,4MAKFZ,cAAgB,SAACa,GACb,EAAKzB,MAAMlB,WAAW2C,EAAY,EAAKzB,MAAM9B,W,uDAJjD,WACIwD,KAAK1B,MAAMlB,WAAW4C,KAAK1B,MAAM5B,YAAasD,KAAK1B,MAAM9B,Y,oBAK7D,WAEI,OACI,qCACKwD,KAAK1B,MAAM2B,WAAY,qBAAKZ,IAAKa,EAAQV,IAAK,KAAQ,KACvD,cAAC,EAAD,CAAO/C,gBAAiBuD,KAAK1B,MAAM7B,gBAC5BD,SAAUwD,KAAK1B,MAAM9B,SACrBE,YAAasD,KAAK1B,MAAM5B,YACxBwC,cAAec,KAAKd,cACpBS,OAAQK,KAAK1B,MAAM6B,aACnBT,SAAUM,KAAK1B,MAAMR,gBACrBvB,MAAOyD,KAAK1B,MAAM/B,e,GAnBT6D,aAyBjBN,ICoCAO,mBAnCf,SAAyB/E,GACrB,MAAO,CACHiB,MAAOjB,EAAMgF,UAAU/D,MACvBC,SAAUlB,EAAMgF,UAAU9D,SAC1BC,gBAAiBnB,EAAMgF,UAAU7D,gBACjCC,YAAapB,EAAMgF,UAAU5D,YAC7BuD,WAAY3E,EAAMgF,UAAU3D,eAIpC,SAA4BU,GACxB,MAAO,CACHsC,OAAQ,SAAC7C,GACLO,EAASR,EAASC,KAEtB4C,SAAU,SAAC5C,GACPO,EAASL,EAAWF,KAExByD,eAAgB,SAACrD,GACbG,EAASJ,EAAeC,KAE5BE,WAAY,SAACV,EAAqBF,GAE9Ba,EAASD,EAAWV,EAAaF,KAErC2D,aAAc,SAAC/E,GAEXiC,EAASa,EAAc9C,KAE3B0C,gBAAiB,SAAC1C,GAEdiC,EAASS,EAAgB1C,QAItBiF,CAA6CG,G,QCzDtDlE,EAAyB,CAC3BlB,GAAI,KACJqF,MAAO,KACPC,MAAO,KACPC,QAAQ,GAmBCC,EAAc,SAAC,GAA0C,IAAzCF,EAAwC,EAAxCA,MACzB,MAAO,CACH3D,KAAM,gBACN8D,QAAS,CAACzF,GAHmD,EAAjCA,GAGdsF,QAAOD,MAHwC,EAA7BA,MAGJE,OAHiC,EAAtBA,UAOlCG,EAAgB,WACzB,OAAO,SAACzD,GNHArB,EAASsB,IAAT,WAAwBC,MAAK,SAAAC,GACjC,OAAOA,EAAEC,QMGCF,MAAK,SAAAE,GACX,GAAuB,IAApBA,EAAKQ,WAAiB,CACrB,MAA2BR,EAAKA,KAAzBiD,EAAP,EAAOA,MAAOtF,EAAd,EAAcA,GAAIqF,EAAlB,EAAkBA,MAClBpD,EAASuD,EAAY,CAACF,QAAOtF,KAAIqF,QAAOE,QAAQ,WAMnDI,EAAU,SAACL,EAAeM,EAAkBC,GAAlC,OAA0D,SAAC5D,INRzD,SAACqD,EAAeM,EAAkBC,GACvD,OAAOjF,EAASmC,KAAT,aAA2B,CAACuC,QAAOM,WAAUC,gBMQpDC,CAAUR,EAAOM,EAAUC,GAAY1D,MAAK,SAAA4D,GACpC9D,EAASyD,UAIRM,EAAW,kBAAM,SAAC/D,GNTpBrB,EAAS+B,OAAO,cMUVR,MAAK,SAAA4D,GACV9D,EAASuD,EAAY,CAACF,MAAM,KAAMtF,GAAG,KAAMqF,MAAM,KAAME,QAAQ,UCc5DU,MA/Df,WACI,IAAMhE,EAAWiE,cAEXC,EAASC,YAAU,CACrBC,cAAe,CACXf,MAAO,GACPM,SAAU,GACVC,YAAY,GAEhBS,SAAU,SAACC,GACP,IAAMC,EAA0B,GAYhC,OAXKD,EAAOjB,MAEA,4CAA4CmB,KAAKF,EAAOjB,SAChEkB,EAAOlB,MAAQ,yBAFfkB,EAAOlB,MAAQ,WAKdiB,EAAOX,SAEDW,EAAOX,SAASc,OAAS,IAChCF,EAAOZ,SAAW,oBAFlBY,EAAOZ,SAAW,WAIfY,GAEXG,SAAU,SAAAJ,GACN,IAAOjB,EAA+BiB,EAA/BjB,MAAOM,EAAwBW,EAAxBX,SAAUC,EAAcU,EAAdV,WACxB5D,EAAS0D,EAAQL,EAAOM,EAAUC,OAI1C,OACI,uBAAMc,SAAUR,EAAOS,aAAvB,UACI,gCACI,uBAAOC,YAAa,QACbrC,KAAM,QAAS1C,MAAOqE,EAAOI,OAAOjB,MACpCwB,SAAUX,EAAOY,aACjBC,OAAQb,EAAOc,aACrBd,EAAOe,QAAQ5B,OACZa,EAAOK,OAAOlB,OAAS,qBAAKjF,MAAO,CAAC8G,MAAO,OAApB,SAA6BhB,EAAOK,OAAOlB,WAE1E,gCACI,uBAAOuB,YAAa,WACblF,KAAK,WACL6C,KAAM,WACN1C,MAAOqE,EAAOI,OAAOX,SACrBkB,SAAUX,EAAOY,aACjBC,OAAQb,EAAOc,aACrBd,EAAOe,QAAQtB,UACZO,EAAOK,OAAOZ,UAAY,qBAAKvF,MAAO,CAAC8G,MAAO,OAApB,SAA6BhB,EAAOK,OAAOZ,cAE7E,8BACI,uBAAOjE,KAAM,WACN6C,KAAM,aACN4C,QAASjB,EAAOI,OAAOV,WACvBiB,SAAUX,EAAOY,iBAE5B,8BACI,iDC3CDM,MAlBf,WAEI,IAAMC,EAAWC,cAEXpH,EAAOF,aAAoC,SAAAC,GAAK,OAAIA,EAAMC,QAMhE,OAJGA,EAAKoF,QACJ+B,EAAS,YAAD,OAAanH,EAAKH,KAI1B,gCACI,uCACA,cAAC,EAAD,Q,kCCiBGwH,MA9Bf,SAAsBtE,GAIlB,MAA8BO,oBAAS,GAAvC,mBAAKgE,EAAL,KAAeC,EAAf,KACA,EAAwBjE,mBAAiBP,EAAMpB,OAA/C,mBAAK6F,EAAL,KAAYC,EAAZ,KAoBA,OAAOH,EACD,uBAAO3F,MAAO6F,EAAOb,SALP,SAACe,GACjBD,EAASC,EAAEC,cAAchG,QAIqBiG,WAAS,EAACf,OATnC,WACrBU,GAAY,GACZxE,EAAM4D,SAASa,MAQb,sBAAMK,cAda,WACrBN,GAAY,GACZE,EAAS1E,EAAMpB,QAYb,SAAwCoB,EAAMpB,SCFlDZ,GAAe,CACjB+G,QAAS,GACTC,MAAO,CACH,CAAClI,GAAI,EAAGmI,QAAS,QAASC,WAAY,GACtC,CAACpI,GAAI,EAAGmI,QAAS,KAAMC,WAAY,GACnC,CAACpI,GAAI,EAAGmI,QAAS,MAAOC,WAAY,GACpC,CAACpI,GAAI,EAAGmI,QAAS,MAAOC,WAAY,GACpC,CAACpI,GAAI,EAAGmI,QAAS,QAASC,WAAY,IAE1C3D,OAAQ,IA6CC4D,GAAmB,SAACrI,GAC7B,OAAO,SAACiC,GVlCc,IAACqG,KUmCRtI,EVlCRY,EAASsB,IAAT,kBAAwBoG,IAAUnG,MAAK,SAAAC,GAC1C,OAAOA,MUiCkBD,MAAK,SAAAC,GAC1BmG,QAAQC,IAAIpG,EAAEC,MACdJ,EAL6C,CAACN,KAAM,mBAAoBsG,QAKhD7F,EAAEC,YAKzBoG,GAAiB,SAAChE,GAAD,MAAqB,CAAC9C,KAAM,gBAAiB8D,QAAS,CAAChB,YACxEiE,GAAiB,SAACjE,GAC3B,OAAO,SAACxC,IVlCgB,SAACwC,GACzB,OAAO7D,EAAS+H,IAAT,iBAA+B,CAAClE,YUkCnCmE,CAAanE,GAAQtC,MAAK,SAAAC,GACI,IAAtBA,EAAEC,KAAKQ,YACPZ,EAASwG,GAAehE,SAM3BoE,GAAc,SAACP,GACxB,OAAO,SAACrG,IVhDa,SAACqG,GACtB,OAAO1H,EAASsB,IAAT,yBAA+BoG,IAAUnG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,SUgDxDyG,CAAUR,GAAQnG,MAAK,SAAAC,GACnBH,EAASwG,GAAerG,SCxErB2G,OA7Bf,WAEI,IAAMC,EAAO/I,aAAyC,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,MAGpEsI,EADSW,cACOjJ,GAChByE,EAASxE,aAAkC,SAAAC,GAAK,OAAIA,EAAMgJ,YAAYzE,UACtExC,EAAWiE,cAOjB,OAAKoC,IAAWU,EAER,qBAAK5I,UAAWC,IAAMoE,OAAtB,SACI,+BAAOA,MAKX,qBAAKrE,UAAWC,IAAMoE,OAAtB,SACI,cAAC,EAAD,CAAc3C,MAAO2C,EAAQqC,SAdhB,SAACa,GACtB1F,EAASyG,GAAef,U,oBCOjBwB,OApBf,WAEI,IAAMC,EAAY,SAACvB,GACf,GAAIA,EAAEwB,OAAOC,OAASzB,EAAEwB,OAAOC,MAAM,GAAI,CACrC,IAAMC,EAAQ1B,EAAEwB,OAAOC,MAAM,GAC7Bf,QAAQC,IAAIe,GZyDG,SAACA,GACxB,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASH,GAClB3I,EAAS+H,IAAI,gBAAiBa,EAAU,CAACvI,QAAS,CACjD,eAAgB,yBY5DhB0I,CAAY9B,EAAEwB,OAAOC,MAAM,MAInC,OACI,qBAAKlJ,UAAWwJ,KAAER,UAAlB,SACI,kCACI,8CACA,uBAAOzH,KAAM,OAAQmF,SAAU,SAAAe,GAAC,OAAIuB,EAAUvB,IAAIrD,KAAM,qBCmBzDqF,GA5BK,WAEhB,IAEIN,EAFEtB,EAAUhI,aAAuC,SAAAC,GAAK,OAAIA,EAAMgJ,YAAYjB,WAIlF,OAAKA,EAAQ/D,QAGTqF,EAAQtB,EAAQ/D,OAAOC,MAKvB,sBAAK/D,UAAWC,IAAMyJ,YAAtB,UACI,sBAAK1J,UAAWC,IAAMkJ,MAAtB,UACI,qBAAKnJ,UAAWC,IAAM0J,YACjB9F,IAAKsF,GAAgB,mDAAoDnF,IAAK,KACnF,cAAC,GAAD,OAEJ,sBAAKhE,UAAWC,IAAM2J,KAAtB,mBACW/B,EAAQgC,SACf,cAAC,GAAD,WAfD,qBAAKhG,IAAKa,EAAQV,IAAK,M,wCCmBvB8F,OAxBf,SAAmBhH,GAEf,IAEIqG,EAFEjC,EAAWC,cAIjB,OAAKrE,EAAM1B,QAAQ0C,QAGfqF,EAAQrG,EAAM1B,QAAQ0C,OAAOC,MAI7B,sBAAK/D,UAAW+J,KAAOC,SAAvB,UACI,qBAAKhK,UAAW+J,KAAOE,IAClBxG,QAAS,WACL,OAAOyD,EAAS,YAAD,OAAapE,EAAM1B,QAAQxB,MAE9CiE,IAAKsF,GAAgB,mDAAoDnF,IAAK,KACnF,+BAAOlB,EAAM1B,QAAQgD,WAZlB,qBAAKP,IAAKa,EAAQV,IAAK,MCkBvBkG,OA9Bf,WAEI,IAAM9I,EAAUvB,aAA4C,SAAAC,GAAK,OAAIA,EAAMgF,UAAU1D,WAC/ES,EAAWiE,cAEjBqE,qBAAU,WACNtI,EAASQ,OACV,IAEH8F,QAAQC,IAAIhH,GAEZ,IAAMgJ,EAAYhJ,EAAQiJ,QAAO,SAACC,EAAGC,GAAJ,OAAcA,EAAQ,KAAGhH,KAAI,SAAAK,GAC1D,OACI,cAAC,GAAD,CAAsBxC,QAASwC,GAAfA,EAAEhE,OAM1B,OAFAuI,QAAQC,IAAIgC,GAGR,sBAAKpK,UAAW+J,KAAOS,SAAvB,UACI,sBAAMxK,UAAW+J,KAAOxC,MAAxB,2BACA,qBAAKvH,UAAW+J,KAAOK,UAAvB,SACKA,IAEL,mBAAGpK,UAAW+J,KAAOU,IAAKC,KAAM,IAAhC,qB,wCCbGC,OAdf,YAAqC,IAArB5C,EAAoB,EAApBA,QAEZ,OACI,sBAAK/H,UAAWC,KAAM2K,UAAtB,UACI,qBAAK5K,UAAWC,KAAM4K,QAAtB,SACI,qBAAKhH,IAAK,mDAAoDG,IAAK,OAEvE,qBAAKhE,UAAWC,KAAM8H,QAAtB,SACI,4BAAIA,UCcL+C,OAtBf,WAEI,MAAwBzH,mBAAS,IAAjC,mBAAOV,EAAP,KAAaoI,EAAb,KACMlJ,EAAWiE,cAKjB,OACI,sBAAK7F,MAAO,CAAC+K,MAAO,SAApB,UACI,0BAAU/K,MAAO,CAACgL,OAAQ,OAAQD,MAAO,QAASE,OAAQ,OAAQC,aAAc,OACtE1E,YAAa,WACb/E,MAAOiB,EACP+D,SARC,SAACe,GAAD,OAA+CsD,EAAQtD,EAAEC,cAAchG,QAKlF,eAIA,wBACIzB,MAAO,CAAC+K,MAAO,OAAQI,SAAU,WAAYC,UAAW,OAAQH,OAAQ,OAAQC,aAAc,OAC9F1H,QAVI,kBAAM5B,EPuEf,CAACN,KAAM,WAAY+J,QOvEqB3I,KAQvC,0BCUG4I,OApBf,WAEI,IAAMC,EAAgB3L,aAAsC,SAAAC,GAAK,OAAIA,EAAMgJ,YAAYhB,SAClFvE,KAAI,SAAAZ,GAAI,OAAI,cAAC,GAAD,CAAOoF,QAASpF,EAAKoF,QAASnI,GAAI+C,EAAK/C,GAAkBoI,WAAYrF,EAAKqF,YAA1BrF,EAAK/C,OAEtE,OACI,sBAAKI,UAAS,UAAKyL,KAAQb,UAAb,YAA0Bc,IAASd,WAAjD,UACI,sBAAK5K,UAAWyL,KAAQ9I,KAAxB,UACI,qBAAK3C,UAAWyL,KAAQlE,MAAxB,SACI,sBAAMvH,UAAWyL,KAAQE,OAAzB,uBAEJ,cAAC,GAAD,OAEJ,qBAAK3L,UAAWyL,KAAQ3D,MAAxB,SACK0D,QCWFI,OAvBf,WAEI,IAAM/J,EAAWiE,cAEXoC,EADSW,cACOjJ,GAChBgJ,EAAO/I,aAAyC,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,MAS1E,OAPAuK,qBAAU,WACFjC,IACArG,EAASoG,GAAiBC,IAC1BrG,EAAS4G,GAAYP,OAE1B,CAACA,IAGA,sBAAKlI,UAAS,kBAAawJ,IAAE3B,SAA7B,UACI,cAAC,GAAD,IACCe,KAAUV,GAAU,cAAC,GAAD,IACrB,cAAC,GAAD,Q,oBCfG2D,OARf,SAAqB/I,GACjB,OACI,qBAAK9C,UAAWwJ,KAAEsC,aAAlB,SACI,cAAC,IAAD,CAAS1L,GAAI,WAAa0C,EAAMlD,GAAII,UAAW,qBAAE+L,SAAwBvC,KAAEwC,OAAS,IAApF,SAA0FlJ,EAAMsB,UCS7F6H,OAZf,SAAiBnJ,GAEb,OACI,qBAAK9C,UAAWwJ,KAAE0C,SAAlB,SACQ,qBAAKlM,UAAWwJ,KAAEzB,QAAlB,SACKjF,EAAMiF,aCDrBjH,GAAe,CACjBoL,SAAU,CACN,CAACtM,GAAI,EAAGmI,QAAS,MACjB,CAACnI,GAAI,EAAGmI,QAAS,gBACjB,CAACnI,GAAI,EAAGmI,QAAS,MACjB,CAACnI,GAAI,EAAGmI,QAAS,MAErBoE,QAAS,CACL,CAACvM,GAAI,EAAGwE,KAAM,OACd,CAACxE,GAAI,EAAGwE,KAAM,SACd,CAACxE,GAAI,EAAGwE,KAAM,QACd,CAACxE,GAAI,EAAGwE,KAAM,QACd,CAACxE,GAAI,EAAGwE,KAAM,YCAPgI,OAjBf,WAEI,IAAMvK,EAAWiE,cACjB,EAAoCzC,mBAAS,IAA7C,mBAAOgJ,EAAP,KAAmBC,EAAnB,KAKA,OACQ,gCACI,0BAAU5K,MAAO2K,EAAY3F,SALnB,SAACe,GAAD,OAA+C6E,EAAc7E,EAAEC,cAAchG,QAKvF,yBACA,wBAAQ+B,QALA,kBAAK5B,EDyCG,SAACwK,GAC7B,MAAO,CAAC9K,KAAM,eAAgB8K,cC1CIE,CAAiBF,KAKvC,sBCuBDG,OA5Bf,WAEI,IAAMtF,EAAWC,cAEXsF,EAAiB5M,aAA6C,SAAAC,GAAK,OAAIA,EAAM4M,YAAYP,WAC1F5I,KAAI,SAAAyI,GAAM,OAAI,cAAC,GAAD,CAAY5H,KAAM4H,EAAO5H,KAAMxE,GAAIoM,EAAOpM,QACvD+M,EAAmB9M,aAA8C,SAAAC,GAAK,OAAIA,EAAM4M,YAAYR,YAC7F3I,KAAI,SAAAK,GAAC,OAAI,cAAC,GAAD,CAAShE,GAAIgE,EAAEhE,GAAImI,QAASnE,EAAEmE,aAO5C,OANelI,aAAmC,SAAAC,GAAK,OAAIA,EAAMC,KAAKoF,WAGlE+B,EAAS,UAIT,sBAAKlH,UAAWwJ,KAAE2C,QAAlB,UACI,qBAAKnM,UAAWwJ,KAAEsC,aAAlB,SACKW,IAEL,qBAAKzM,UAAWwJ,KAAE0C,SAAlB,SACKS,IAEL,cAAC,GAAD,QCFGC,OApBf,WAEI,OACI,qBAAK5M,UAAWC,IAAM4M,KAAtB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAM,YAAaC,QAAS,cAAC,GAAD,MACnC,cAAC,IAAD,CAAOD,KAAM,eAAgBC,QAAS,cAAC,GAAD,MACtC,cAAC,IAAD,CAAOD,KAAM,gBAAiBC,QAAS,cAAC,EAAD,MACvC,cAAC,IAAD,CAAOD,KAAM,QAASC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAM,SAAUC,QAAS,cAAC,EAAD,MAChC,cAAC,IAAD,CAAOD,KAAM,YAAaC,QAAS,cAAC,EAAD,MACnC,cAAC,IAAD,CAAOD,KAAM,aAAcC,QAAS,cAAC,GAAD,MACpC,cAAC,IAAD,CAAOD,KAAM,IAAKC,QAAS,cAAC,GAAD,MAC3B,cAAC,IAAD,CAAOD,KAAM,SAAUC,QAAS,cAACC,EAAD,MAChC,cAAC,IAAD,CAAOF,KAAM,SAAUC,QAAS,cAAC,EAAD,Y,oBCYjCE,OA7Bf,WAEI,IAAMpL,EAAWiE,cACXhG,EAAQD,aAAoC,SAAAC,GAAK,OAAIA,EAAMC,QAG3DoF,EAASrF,EAAMqF,OAOrB,OAJAgF,qBAAU,WACNtI,EAASyD,OACV,IAGC,qBAAKtF,UAAWC,KAAMiN,OAAtB,SACI,sBAAKlN,UAAWC,KAAMkN,gBAAtB,UACI,qBAAKtJ,IAXJ,+EAWeG,IAAK,KACrB,qBAAKhE,UAAWC,KAAMmN,WAAtB,SACKjI,EAAS,cAAC,IAAD,CAAS/E,GAAE,mBAAcN,EAAMF,IAA/B,SAAsCE,EAAMmF,QAClD,cAAC,IAAD,CAAS7E,GAAI,SAAb,qBAER,qBAAKJ,UAAWC,KAAMoN,OAAtB,SACKlI,GAAU,wBAAQ1B,QAfpB,kBAAM5B,EAAS+D,MAeH,6BCXhB0H,OAZf,WAEI,OACI,sBAAKtN,UAAU,MAAf,UACI,cAAC,GAAD,IACA,sBAAKA,UAAU,YAAf,UACI,cAAC,EAAD,IACA,cAAC,GAAD,WCADuN,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB1L,MAAK,YAAkD,IAA/C2L,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,kBCDVO,GAAcC,aAAgB,CAC9BlF,YnBsC0B,WAAmF,IAAlFhJ,EAAiF,uDAAvDgB,GAAcmN,EAAyC,uCAC5G,OAAQA,EAAO1M,MACX,IAAK,WACD,IAAM+J,EAAU,CACZ1L,GAAI,EACJmI,QAASkG,EAAO3C,QAChBtD,WAAY,GAEZkG,EAAQ,eAAOpO,GAGnB,OAFAoO,EAASpG,MAAT,YAAqBhI,EAAMgI,OAC3BoG,EAASpG,MAAM1E,KAAKkI,GACb4C,EAGX,IAAK,mBACD,OAAO,2BAAIpO,GAAX,IAAkB+H,QAASoG,EAAOpG,UAEtC,IAAK,gBACD,OAA8B,OAA1BoG,EAAO5I,QAAQhB,OACR,2BAAIvE,GAAX,IAAkBuE,OAAQ4J,EAAO5I,QAAQhB,SAElC,2BAAIvE,GAAX,IAAkBuE,OAAQ,4GAGlC,QACI,OAAOvE,ImB9Df4M,YPkB0B,WAAmF,IAAlF5M,EAAiF,uDAAvDgB,GAAcmN,EAAyC,uCAC5G,GACS,iBADDA,EAAO1M,KACX,CACI,IAAI2M,EAAQ,eAAOpO,GACnBoO,EAAShC,SAAT,YAAwBpM,EAAMoM,UAC9BgC,EAAS/B,QAAT,YAAuBrM,EAAMqM,SAC7B,IAAIE,EAAa,CACbzM,GAAIuO,KAAKC,MACTrG,QAASkG,EAAO5B,YAGpB,OADA6B,EAAShC,SAAS9I,KAAKiJ,GAChB6B,EAGP,OAAOpO,GO/BfgF,U5BewB,WAAoF,IAAnFhF,EAAkF,uDAAxDgB,EAAcmN,EAA0C,uCAE3G,OAAQA,EAAO1M,MACX,IAAK,SACD,OAAO,2BAAIzB,GAAX,IAAkBiB,MAAOjB,EAAMiB,MAAMwC,KAAI,SAAAK,GAAC,OAAIA,EAAEhE,KAAOqO,EAAO3M,OAAhB,2BAA6BsC,GAA7B,IAAgCK,UAAU,IAAQL,OACpG,IAAK,WACD,OAAO,2BAAI9D,GAAX,IAAkBiB,MAAOjB,EAAMiB,MAAMwC,KAAI,SAAAK,GAAC,OAAIA,EAAEhE,KAAOqO,EAAO3M,OAAhB,2BAA6BsC,GAA7B,IAAgCK,UAAU,IAASL,OACrG,IAAK,QACD,OAAO,2BAAI9D,GAAX,IAAkBiB,MAAM,YAAKkN,EAAOlN,SACxC,IAAK,UACD,OAAO,2BAAIjB,GAAX,IAAkBsB,QAAQ,YAAK6M,EAAO7M,WAE1C,IAAK,iBACD,OAAO,2BAAItB,GAAX,IAAkBoB,YAAa+M,EAAOvM,QAC1C,IAAM,kBACF,OAAO,2BAAI5B,GAAX,IAAkBmB,gBAAiBgN,EAAO7L,aAC9C,IAAK,qBACD,OAAO,2BAAItC,GAAX,IAAkBqB,WAAY8M,EAAO9M,aACzC,QACI,OAAOrB,I4BjCfC,KvBQuB,WAAwD,IAAvDD,EAAsD,uDAA/CgB,EAAcmN,EAAiC,uCAC9E,MACS,kBADDA,EAAO1M,KAEA,uCAAIzB,GAAUmO,EAAO5I,SAA5B,IAAqCF,OAAQ8I,EAAO5I,QAAQF,SAErDrF,KuBNJuO,GAFDC,aAAYP,GAAaQ,aAAgBC,OCPvDC,IAASC,OACL,cAAC,IAAD,UACI,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGRM,SAASC,eAAe,SAG5BrB,O","file":"static/js/main.fe1eaca8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2MJq8\",\"profileInfo\":\"Profile_profileInfo__1V9TF\",\"photo\":\"Profile_photo__QDB2K\",\"imgContent2\":\"Profile_imgContent2__1LdLG\",\"info\":\"Profile_info__nB2uF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__OBfIh\",\"dialogsItems\":\"Dialogs_dialogsItems__2tZP_\",\"messages\":\"Dialogs_messages__3YAxE\",\"message\":\"Dialogs_message__2pv48\",\"newMessage\":\"Dialogs_newMessage__pIDau\",\"dialog\":\"Dialogs_dialog__16DoV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__1VdTN\",\"myPost\":\"MyPosts_myPost__2xj9L\",\"post\":\"MyPosts_post__2wY4g\",\"title\":\"MyPosts_title__bo2RC\",\"posts\":\"MyPosts_posts__1D9xa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subBlock\":\"Subscriptions_subBlock__3cR5u\",\"title\":\"Subscriptions_title__SjJyV\",\"myFriends\":\"Subscriptions_myFriends__2WmqD\",\"all\":\"Subscriptions_all__dW0Bd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__ekcwf\",\"headerContainer\":\"Header_headerContainer__nNc2S\",\"loginBlock\":\"Header_loginBlock__3ecLf\",\"logout\":\"Header_logout__1nLcU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"Posts_postBlock__TaiGy\",\"imgPost\":\"Posts_imgPost__G5arj\",\"message\":\"Posts_message__HzH4g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2Qc9z\",\"navBlock\":\"Nav_navBlock__1lem_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myFriend\":\"MyFriends_myFriend__39I44\",\"img\":\"MyFriends_img__5p-cT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageCount\":\"Users_pageCount__1xojC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"AppRoutes_main__1Kgy8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editPhoto\":\"EditPhoto_editPhoto__2THtI\"};","import React from 'react';\r\nimport '../../App.css';\r\nimport style from './Nav.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\n\r\n\r\nfunction Nav() {\r\n\r\n    const id = useSelector<AppStateType, number | null>(state => state.auth.id)\r\n\r\n    return (\r\n        <div className={style.nav}>\r\n            <div className={style.navBlock}>\r\n                <div>\r\n                    <NavLink to={`/profile/${id}`}>Profile</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to={'/dialogs'}>Messages</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to={'/news'}>News</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to={'/music'}>Music</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to={'/settings'}>Settings</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to={'/users'}>Users</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className={'content'}>\r\n            <h1>News</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default News;","import React from 'react';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className={'content'}>\r\n           <h1>Music</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            <h1>Settings</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;"," import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": '806c8a08-1234-4569-9286-e0b28a075abb'\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n export const getUsers = (currentPage: number = 1, pageSize: number = 10 ) => {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(r => {\r\n            return r.data\r\n    })\r\n}\r\n\r\nexport const getFriends = () => {\r\n    return instance.get(`users?friend=${true}`).then(r => {\r\n        return r.data\r\n    })\r\n}\r\n\r\nexport const followUsers = (id: number) => {\r\n    return  instance.post(`follow/${id}`, {}).then(r => {\r\n        return r.data\r\n        }\r\n    )\r\n}\r\n\r\nexport const UnfollowUsers = (id: number) => {\r\n    return  instance.delete(`follow/${id}`).then(r => {\r\n        return r.data\r\n    })\r\n}\r\n\r\nexport const authApi = () => {\r\n    return  instance.get(`auth/me`).then(r => {\r\n        return r.data\r\n    })\r\n}\r\n\r\nexport const authLogin = (email: string, password: string, rememberMe: boolean) => {\r\n    return instance.post(`auth/login`,{email, password, rememberMe} )\r\n}\r\n\r\nexport const authLogout = () => {\r\n    return instance.delete('auth/login')\r\n}\r\n\r\n\r\nexport const getProfile = (userId: string) => {\r\n    return instance.get(`profile/${userId}`).then(r => {\r\n        return r\r\n    })\r\n}\r\n\r\nexport const getStatus = (userId: string) => {\r\n    return instance.get(`profile/status/${userId}`).then(r => r.data)\r\n}\r\n\r\nexport const changeStatus = (status: string) => {\r\n    return instance.put(`profile/status`, {status})\r\n}\r\n\r\nexport const changePhoto = (photo: any) => {\r\n    const formData = new FormData()\r\n    formData.append('image', photo)\r\n    return instance.put('profile/photo', formData, {headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n        }})\r\n}","import {followUsers, getFriends, getUsers, UnfollowUsers} from \"./api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport type UsersType = {\r\n    \"name\": string,\r\n    \"id\": number,\r\n    \"photos\": {\r\n        \"small\": null,\r\n        \"large\": null\r\n    },\r\n    \"status\": null,\r\n    \"followed\": boolean\r\n}\r\n\r\n\r\n\r\nconst initialState = {\r\n    users: [] as Array<UsersType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    friends: [] as Array<UsersType>,\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const usersReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"FOLLOW\":\r\n            return {...state, users: state.users.map(m => m.id === action.userID ? {...m, followed: true} : m)}\r\n        case 'UNFOLLOW':\r\n            return {...state, users: state.users.map(m => m.id === action.userID ? {...m, followed: false} : m)}\r\n        case 'USERS':\r\n            return {...state, users: [...action.users]}\r\n        case \"FRIENDS\": {\r\n            return {...state, friends: [...action.friends]}\r\n        }\r\n        case \"SET-COUNT-PAGE\":\r\n            return {...state, currentPage: action.value}\r\n        case  \"SET-TOTAL-COUNT\":\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        case \"TOGGLE-IS-FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type followACType = ReturnType<typeof followAC>\r\nexport type unFollowACType = ReturnType<typeof unFollowAC>\r\nexport type setUsersACType = ReturnType<typeof setUsersAC>\r\nexport type setCountPageACType = ReturnType<typeof setCountPageAC>\r\nexport type setTotalCountACType = ReturnType<typeof setTotalCountAC>\r\nexport type toggleIsFetchingACType = ReturnType<typeof toggleIsFetchingAC>\r\nexport type getFriendsACType = ReturnType<typeof getFriendsAC>\r\n\r\nexport type ActionsType =\r\n    followACType\r\n    |unFollowACType\r\n    |setUsersACType\r\n    | setCountPageACType\r\n    | setTotalCountACType\r\n    | toggleIsFetchingACType\r\n    | getFriendsACType\r\n\r\n\r\n\r\nexport const followAC = (userID: any) => ({type: \"FOLLOW\", userID} as const)\r\nexport const unFollowAC = (userID: any) => ({type: 'UNFOLLOW', userID} as const)\r\nexport const setUsersAC = (users: Array<UsersType>) => ({type: \"USERS\", users} as const)\r\nexport const setCountPageAC = (value: number) => ({type: \"SET-COUNT-PAGE\", value} as const)\r\nexport const setTotalCountAC = (totalCount: number) => ({type: \"SET-TOTAL-COUNT\", totalCount} as const)\r\nexport const toggleIsFetchingAC = (isFetching: boolean) => ({type: \"TOGGLE-IS-FETCHING\", isFetching} as const)\r\nexport const getFriendsAC = (friends: Array<UsersType>) => ({type: \"FRIENDS\", friends} as const)\r\n\r\nexport const getUsersTC = (currentPage: number,pageSize: number ) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(toggleIsFetchingAC(true))\r\n        dispatch(setCountPageAC(currentPage))\r\n        getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(setUsersAC(data.items))\r\n            dispatch(setTotalCountAC(data.totalCount))\r\n            dispatch(toggleIsFetchingAC(false))\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport const getFriendsTC = () => (dispatch: Dispatch) => {\r\n    getFriends().then(data => {\r\n        dispatch(getFriendsAC(data.items))\r\n    })\r\n}\r\n\r\n\r\nexport const UnfollowUsersTC = (id: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        UnfollowUsers(id).then(data => {\r\n            if (data.resultCode === 0) {\r\n               dispatch(unFollowAC(id))\r\n                dispatch(toggleIsFetchingAC(false))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const followUsersTC = (id: number) => {\r\nreturn (dispatch: Dispatch) => {\r\n    followUsers(id).then(data => {\r\n        if (data.resultCode === 0) {\r\n            dispatch(followAC(id))\r\n\r\n        }\r\n    })\r\n}\r\n}\r\n","import React, {useState} from 'react';\r\nimport classes from \"./Users.module.css\";\r\nimport {UsersType} from \"../../redux/usersReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype PropsType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    onPageChanged: (value: number) => void\r\n    follow: (userID: any) => void\r\n    unFollow: (userID: any) => void\r\n}\r\n\r\nfunction Users(props: PropsType) {\r\n\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pageCount && i < 10; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const [disabled, setDisabled] = useState(0)\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map(p =>\r\n                    <span onClick={() => {\r\n                        props.onPageChanged(p)\r\n                    }} className={props.currentPage === p ? classes.pageCount : ''}>{p}</span>\r\n                )}\r\n            </div>\r\n            {props.users.map(m =>\r\n                <div key={m.id}>\r\n                    <span>\r\n                        <NavLink to={`/profile/${m.id}`}>\r\n                            <div>\r\n                            <img className={'imgUsersAvatar'}\r\n                                 src={m.photos.large === null ? 'https://i.vimeocdn.com/portrait/39345265_640x640' : m.photos.large}\r\n                                 alt={''}/>\r\n                        </div>\r\n                        </NavLink>\r\n                        <div>\r\n                           {m.followed ? <button disabled={disabled === m.id} onClick={() => {\r\n                               props.unFollow(m.id)\r\n\r\n                           }}>Unfollow</button> : <button disabled={disabled === m.id} onClick={() => {\r\n                               props.follow(m.id)\r\n                           }}>Follow</button>}\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{m.name}</div>\r\n                        <div>{m.status}</div>\r\n                    </span>\r\n                    <span>\r\n                    </span>\r\n                </div>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/loader.535014e2.svg\";","    import React, {Component} from 'react';\r\nimport {UsersPropsType} from \"./UsersContainer\";\r\nimport Users from \"./Users\";\r\nimport loader from './loader.svg'\r\n\r\n\r\n\r\nclass UsersApiComponent extends Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersTC(this.props.currentPage, this.props.pageSize)\r\n    }\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsersTC(pageNumber, this.props.pageSize)\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                {this.props.ifFetching? <img src={loader} alt={''}/> : null}\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                       pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage}\r\n                       onPageChanged={this.onPageChanged}\r\n                       follow={this.props.followUserTC}\r\n                       unFollow={this.props.UnfollowUsersTC}\r\n                       users={this.props.users}\r\n                />\r\n            </>\r\n        );\r\n }\r\n}\r\nexport default UsersApiComponent;","import {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {\r\n    followAC,\r\n    followUsersTC,\r\n    getUsersTC,\r\n    setCountPageAC,\r\n    unFollowAC,\r\n    UnfollowUsersTC,\r\n    UsersType\r\n} from \"../../redux/usersReducer\";\r\nimport UsersC from \"./UsersApiComponent\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    ifFetching: boolean\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    follow: (userID: any) => void\r\n    unFollow: (userID: any) => void\r\n    setCurrentPage: (value: number) => void\r\n    getUsersTC: (currentPage: number, pageSize: number) => void\r\n    followUserTC: (id: number) => void\r\n    UnfollowUsersTC: (id: number) => void\r\n}\r\nexport type UsersPropsType = MapDispatchToPropsType & MapStateToPropsType\r\n\r\nfunction mapStateToProps(state: AppStateType): MapStateToPropsType {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        ifFetching: state.usersPage.isFetching,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch): MapDispatchToPropsType {\r\n    return {\r\n        follow: (userID: any) => {\r\n            dispatch(followAC(userID))\r\n        },\r\n        unFollow: (userID: any) => {\r\n            dispatch(unFollowAC(userID))\r\n        },\r\n        setCurrentPage: (value: number) => {\r\n            dispatch(setCountPageAC(value))\r\n        },\r\n        getUsersTC: (currentPage: number, pageSize: number) => {\r\n            // @ts-ignore\r\n            dispatch(getUsersTC(currentPage, pageSize))\r\n        },\r\n        followUserTC: (id: number) => {\r\n            // @ts-ignore\r\n            dispatch(followUsersTC(id))\r\n        },\r\n        UnfollowUsersTC: (id: number) => {\r\n            // @ts-ignore\r\n            dispatch(UnfollowUsersTC(id))\r\n        }\r\n}}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersC);","import {Dispatch} from \"redux\";\r\nimport {authApi, authLogin, authLogout} from \"./api/api\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\nexport type AuthType = {\r\n    id: null | number,\r\n    login: null| string,\r\n    email: null| string,\r\n    isAuth: boolean,\r\n}\r\n\r\nconst initialState: AuthType = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n}\r\n\r\n\r\n\r\nexport const authReducer = (state= initialState, action: ActionType): AuthType => {\r\n    switch (action.type) {\r\n        case 'SET_USER_DATA':\r\n            return {...state, ...action.payload, isAuth: action.payload.isAuth}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype setUserDataType = ReturnType<typeof setUserData>\r\n\r\ntype ActionType = setUserDataType\r\n\r\n\r\nexport const setUserData = ({email, id, login, isAuth}: AuthType) => {\r\n    return {\r\n        type: 'SET_USER_DATA',\r\n        payload: {id, email, login, isAuth}\r\n    } as const\r\n}\r\n\r\nexport const setUserDataTC = () => {\r\n    return (dispatch: Dispatch) => {\r\n        authApi().then(data => {\r\n            if(data.resultCode === 0){\r\n                const {email, id, login} = data.data\r\n                dispatch(setUserData({email, id, login, isAuth: true}))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean) => (dispatch: ThunkDispatch<any, any, any>) => {\r\n    authLogin(email, password, rememberMe).then(res => {\r\n            dispatch(setUserDataTC())\r\n    })\r\n}\r\n\r\nexport const logoutTC = () => (dispatch: Dispatch) => {\r\n    authLogout().then(res => {\r\n            dispatch(setUserData({email:null, id:null, login:null, isAuth: false}))\r\n    })\r\n}","import React from 'react';\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {loginTC} from \"../../redux/authReducer\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nfunction LoginForm() {\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required'\r\n            } else if (values.password.length < 4) {\r\n                errors.password = 'Invalid password'\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            const {email, password, rememberMe} = values\r\n            dispatch(loginTC(email, password, rememberMe))\r\n        },\r\n    })\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div>\r\n                <input placeholder={'Login'}\r\n                       name={'email'} value={formik.values.email}\r\n                       onChange={formik.handleChange}\r\n                       onBlur={formik.handleBlur}/>\r\n                {formik.touched.email &&\r\n                    formik.errors.email && <div style={{color: 'red'}}>{formik.errors.email}</div>}\r\n            </div>\r\n            <div>\r\n                <input placeholder={'Password'}\r\n                       type=\"password\"\r\n                       name={'password'}\r\n                       value={formik.values.password}\r\n                       onChange={formik.handleChange}\r\n                       onBlur={formik.handleBlur}/>\r\n                {formik.touched.password &&\r\n                    formik.errors.password && <div style={{color: 'red'}}>{formik.errors.password}</div>}\r\n            </div>\r\n            <div>\r\n                <input type={\"checkbox\"}\r\n                       name={'rememberMe'}\r\n                       checked={formik.values.rememberMe}\r\n                       onChange={formik.handleChange}/>\r\n            </div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport LoginForm from \"./LoginForm\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {AuthType} from \"../../redux/authReducer\";\r\n\r\nfunction Login() {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const auth = useSelector<AppStateType, AuthType>(state => state.auth)\r\n\r\n    if(auth.isAuth) {\r\n        navigate(`/profile/${auth.id}`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginForm/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, {ChangeEvent, useState} from 'react';\r\n\r\ntype PropsType = {\r\n    value: string\r\n    onChange: (title: string) => void\r\n}\r\n\r\nfunction EditableSpan(props: PropsType) {\r\n\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [title, setTitle] = useState<string>(props.value );\r\n\r\n    // if (props.value === null) {\r\n    //     return setTitle('Статус отсутствует')\r\n    // } else {\r\n    //     return setTitle(props.value)\r\n    // }\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n        setTitle(props.value);\r\n    }\r\n    const activateViewMode = () => {\r\n        setEditMode(false);\r\n        props.onChange(title);\r\n    }\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    return editMode\r\n        ? <input value={title} onChange={changeTitle} autoFocus onBlur={activateViewMode}/>\r\n        : <span onDoubleClick={activateEditMode}>{props.value}</span>\r\n}\r\n\r\nexport default EditableSpan;","import {Dispatch} from \"redux\";\r\nimport {changeStatus, getProfile, getStatus} from \"./api/api\";\r\n\r\nexport type ProfileType = {\r\n    \"aboutMe\": null| string,\r\n    \"contacts\": {\r\n        \"facebook\": null| string,\r\n        \"website\": null| string,\r\n        \"vk\": null| string,\r\n        \"twitter\": null| string,\r\n        \"instagram\": null| string,\r\n        \"youtube\": null| string,\r\n        \"github\": null| string,\r\n        \"mainLink\": null| string\r\n    },\r\n    \"lookingForAJob\": boolean,\r\n    \"lookingForAJobDescription\": null| string,\r\n    \"fullName\": string,\r\n    \"userId\": number,\r\n    \"photos\": {\r\n        \"small\": undefined| string,\r\n        \"large\": undefined| string\r\n    }\r\n}\r\n\r\n\r\nexport type PostType = {\r\n    id: number;\r\n    message: string;\r\n    likesCount: number;\r\n}\r\n\r\nconst initialState = {\r\n    profile: {} as ProfileType,\r\n    posts: [\r\n        {id: 1, message: 'Hello', likesCount: 1},\r\n        {id: 2, message: 'Hi', likesCount: 5},\r\n        {id: 3, message: 'one', likesCount: 3},\r\n        {id: 4, message: 'two', likesCount: 6},\r\n        {id: 5, message: 'three', likesCount: 7},\r\n    ] as Array<PostType>,\r\n    status: '',\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'ADD-POST': {\r\n            const newPost = {\r\n                id: 5,\r\n                message: action.newPost,\r\n                likesCount: 0\r\n            }\r\n            let newState = {...state}\r\n            newState.posts = [...state.posts]\r\n            newState.posts.push(newPost);\r\n            return newState\r\n        }\r\n\r\n        case \"SET_USER_PROFILE\": {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case \"CHANGE_STATUS\": {\r\n            if (action.payload.status !== null) {\r\n                return {...state, status: action.payload.status}\r\n            } else {\r\n                return {...state, status: 'Статус отсутствует'}\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\ntype AddPostActionType = ReturnType<typeof AddActionCreate>\r\ntype SetUserProfileType = ReturnType<typeof setUserProfile>\r\ntype changeStatusACType = ReturnType<typeof changeStatusAC>\r\ntype ActionType = AddPostActionType  | SetUserProfileType| changeStatusACType\r\nexport const AddActionCreate = (newPost: string) => {\r\n    return {type: \"ADD-POST\", newPost} as const\r\n}\r\n\r\nexport const setUserProfile = (profile: ProfileType) => ({type: 'SET_USER_PROFILE', profile}as const )\r\nexport const setUserProfileTC = (id: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        getProfile(id as string).then(r => {\r\n            console.log(r.data)\r\n            dispatch(setUserProfile(r.data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const changeStatusAC = (status: string) => ({type: 'CHANGE_STATUS', payload: {status}} as const)\r\nexport const changeStatusTC = (status: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        changeStatus(status).then(r => {\r\n            if (r.data.resultCode === 0) {\r\n                dispatch(changeStatusAC(status))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const getStatusTC = (userId: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        getStatus(userId).then(r => {\r\n            dispatch(changeStatusAC(r))\r\n    })\r\n}\r\n}","import React from 'react';\r\nimport EditableSpan from \"../../../commons/EditableSpan/EditableSpan\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/store\";\r\nimport {changeStatusTC} from \"../../../redux/profileReducer\";\r\nimport style from './../Profile.module.css'\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nfunction ProfileStatus() {\r\n\r\n    const myId = useSelector<AppStateType, number | null>(state => state.auth.id)\r\n\r\n    const params = useParams()\r\n    const userId = params.id\r\n    const status = useSelector<AppStateType, string>(state => state.profilePage.status)\r\n    const dispatch = useDispatch()\r\n\r\n    const removeTaskStatus = (title: string) => {\r\n        dispatch(changeStatusTC(title))\r\n    }\r\n\r\n    // @ts-ignore\r\n    if (+userId !== myId) {\r\n        return (\r\n            <div className={style.status}>\r\n                <span>{status}</span>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className={style.status}>\r\n                <EditableSpan value={status} onChange={removeTaskStatus}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './EditPhoto.module.css'\r\nimport {changePhoto} from \"../../../../redux/api/api\";\r\n\r\n\r\nfunction EditPhoto() {\r\n\r\n    const editPhoto = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            const photo = e.target.files[0]\r\n            console.log(photo)\r\n            changePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.editPhoto}>\r\n            <label>\r\n                <span>Edit Photo</span>\r\n                <input type={'file'} onChange={e => editPhoto(e)} name={'Edit Photo'}/>\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditPhoto;","import React, {useState} from 'react';\r\nimport style from \"../Profile.module.css\";\r\nimport loader from '../../Users/loader.svg'\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/store\";\r\nimport {ProfileType} from \"../../../redux/profileReducer\";\r\nimport EditPhoto from \"./EditPhoto/EditPhoto\";\r\n\r\n\r\nconst ProfileInfo = () => {\r\n\r\n    const profile = useSelector<AppStateType, ProfileType>(state => state.profilePage.profile)\r\n\r\n    let photo;\r\n\r\n    if (!profile.photos) {\r\n        return <img src={loader} alt={''}/>\r\n    } else {\r\n        photo = profile.photos.large\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.profileInfo}>\r\n            <div className={style.photo}>\r\n                <img className={style.imgContent2}\r\n                     src={photo ? photo : 'https://i.vimeocdn.com/portrait/39345265_640x640'} alt={''}/>\r\n                <EditPhoto/>\r\n            </div>\r\n            <div className={style.info}>\r\n                Name: {profile.fullName}\r\n                <ProfileStatus/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport {UsersType} from \"../../../../redux/usersReducer\";\r\nimport styles from './MyFriends.module.css'\r\nimport loader from \"../../../Users/loader.svg\";\r\nimport {Navigate, NavLink, useNavigate} from \"react-router-dom\";\r\n\r\n\r\n\r\ntype PropsType = {\r\n    friends: UsersType\r\n}\r\n\r\nfunction MyFriends(props: PropsType) {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    let photo: string | null;\r\n\r\n    if (!props.friends.photos) {\r\n        return <img src={loader} alt={''}/>\r\n    } else {\r\n        photo = props.friends.photos.large\r\n    }\r\n\r\n    return (\r\n        <div className={styles.myFriend}>\r\n            <img className={styles.img}\r\n                 onClick={()=> {\r\n                     return navigate(`/profile/${props.friends.id}`)\r\n                 }}\r\n                 src={photo ? photo : 'https://i.vimeocdn.com/portrait/39345265_640x640'} alt={''}/>\r\n            <span>{props.friends.name}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyFriends;","import React, {useEffect} from 'react';\r\nimport styles from './Subscriptions.module.css'\r\nimport {getFriendsTC, UsersType} from \"../../../redux/usersReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/store\";\r\nimport MyFriends from \"./MyFriends/MyFriends\";\r\n\r\nfunction Subscriptions() {\r\n\r\n    const friends = useSelector<AppStateType, Array<UsersType>>(state => state.usersPage.friends)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getFriendsTC())\r\n    }, []);\r\n\r\n    console.log(friends)\r\n\r\n    const myFriends = friends.filter((f, index) => index < 6).map(m => {\r\n        return (\r\n            <MyFriends key={m.id} friends={m}/>\r\n        )\r\n    })\r\n\r\n    console.log(myFriends)\r\n\r\n    return (\r\n        <div className={styles.subBlock}>\r\n            <span className={styles.title}>Subscriptions</span>\r\n            <div className={styles.myFriends}>\r\n                {myFriends}\r\n            </div>\r\n            <a className={styles.all} href={'#'}>All</a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Subscriptions;","import React from 'react';\r\nimport style from './Posts.module.css'\r\nimport {PostType} from \"../../../../redux/profileReducer\";\r\n\r\n\r\nfunction Posts({message}: PostType) {\r\n\r\n    return (\r\n        <div className={style.postBlock}>\r\n            <div className={style.imgPost}>\r\n                <img src={'https://i.vimeocdn.com/portrait/39345265_640x640'} alt={''}/>\r\n            </div>\r\n            <div className={style.message}>\r\n                <p>{message}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Posts;","import React, {useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {AddActionCreate} from \"../../../../redux/profileReducer\";\r\n\r\n\r\nfunction AddPost() {\r\n\r\n    const [post, setPost] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const changePost = (e: React.ChangeEvent<HTMLTextAreaElement>) => setPost(e.currentTarget.value)\r\n    const addPost = () => dispatch(AddActionCreate(post))\r\n\r\n    return (\r\n        <div style={{width: '700px'}}>\r\n            <textarea style={{resize: 'none', width: '500px', height: '30px', borderRadius: '4px'}}\r\n                      placeholder={'New post'}\r\n                      value={post}\r\n                      onChange={changePost}> </textarea>\r\n            <button\r\n                style={{width: '60px', position: 'absolute', marginTop: '40px', height: '35px', borderRadius: '4px'}}\r\n                onClick={addPost}>Add post\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddPost","import React from 'react';\r\nimport sMyPost from './MyPosts.module.css'\r\nimport sProfile from './../Profile.module.css'\r\nimport Posts from \"./Post/Posts\";\r\nimport AddPost from \"./Post/AddPost\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/store\";\r\nimport {PostType} from \"../../../redux/profileReducer\";\r\n\r\nfunction MyPosts() {\r\n\r\n    const postsElements = useSelector<AppStateType, PostType[]>(state => state.profilePage.posts)\r\n        .map(post => <Posts message={post.message} id={post.id} key={post.id} likesCount={post.likesCount}/> )\r\n\r\n    return (\r\n        <div className={`${sMyPost.postBlock} ${sProfile.postBlock}`}>\r\n            <div className={sMyPost.post}>\r\n                <div className={sMyPost.title}>\r\n                    <span className={sMyPost.myPost}>My Post</span>\r\n                </div>\r\n                <AddPost/>\r\n            </div>\r\n            <div className={sMyPost.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;\r\n\r\n\r\n\r\n\r\n","import React, {useEffect} from 'react';\r\nimport '../../App.css';\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport Subscriptions from \"./Subscriptions/Subscriptions\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getStatusTC, setUserProfileTC} from \"../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport {AppStateType} from \"../../redux/store\";\r\n\r\nfunction Profile() {\r\n\r\n    const dispatch = useDispatch()\r\n    const params = useParams()\r\n    const userId = params.id as string\r\n    const myId = useSelector<AppStateType, number | null>(state => state.auth.id)\r\n\r\n    useEffect(() => {\r\n        if (userId) {\r\n            dispatch(setUserProfileTC(userId))\r\n            dispatch(getStatusTC(userId))\r\n        }\r\n    }, [userId])\r\n\r\n    return (\r\n        <div className={`content ${s.profile}`}>\r\n            <ProfileInfo/>\r\n            {myId === +userId && <Subscriptions/>}\r\n            <MyPosts/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport {DialogType} from \"../../../redux/dialogsReducer\";\r\n\r\n\r\nfunction DialogItem (props: DialogType) {\r\n    return (\r\n        <div className={s.dialogsItems}>\r\n            <NavLink to={'dialogs/' + props.id} className={({isActive})=> isActive ? s.dialog : ''} >{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport s from \"./../Dialogs.module.css\";\r\nimport {MessageType} from \"../../../redux/dialogsReducer\";\r\n\r\n\r\n\r\nfunction Message(props: MessageType) {\r\n\r\n    return (\r\n        <div className={s.messages}>\r\n                <div className={s.message}>\r\n                    {props.message}\r\n                </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","export type MessageType = {\r\n    id: number,\r\n    message: string,\r\n}\r\nexport type DialogType = {\r\n    name: string,\r\n    id: number,\r\n}\r\n\r\n\r\nconst initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: '!'},\r\n    ] as Array<MessageType>,\r\n    dialogs: [\r\n        {id: 1, name: 'Dim'},\r\n        {id: 2, name: 'Anton'},\r\n        {id: 3, name: 'Alex'},\r\n        {id: 4, name: 'Oleg'},\r\n        {id: 5, name: 'Andrey'},\r\n    ] as Array<DialogType>,\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const dialogsReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SEND-MESSAGE\": {\r\n            let newState = {...state}\r\n            newState.messages = [...state.messages]\r\n            newState.dialogs = [...state.dialogs]\r\n            let newMessage = {\r\n                id: Date.now(),\r\n                message: action.newMessage,\r\n            }\r\n            newState.messages.push(newMessage);\r\n            return newState\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype SendMessageActionType = ReturnType<typeof SendActionCreate>\r\n\r\ntype NewMessageActionType = ReturnType<typeof NewMessageTextActionCreate>\r\n\r\ntype ActionType = SendMessageActionType | NewMessageActionType\r\n\r\nexport const SendActionCreate = (newMessage: string) => {\r\n    return {type: 'SEND-MESSAGE', newMessage} as const\r\n}\r\n\r\nexport const NewMessageTextActionCreate = (text: string) => {\r\n    return {\r\n        type: 'NEW-MESSAGE',\r\n        newMessageText: text\r\n    } as const\r\n}\r\n","import React, {useState} from 'react';\r\nimport {SendActionCreate} from \"../../redux/dialogsReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nfunction AddMessage() {\r\n\r\n    const dispatch = useDispatch()\r\n    const [newMessage, setNewMessage] = useState('')\r\n\r\n    const changeMessage = (e: React.ChangeEvent<HTMLTextAreaElement>) => setNewMessage(e.currentTarget.value)\r\n    const sendMessage = ()=> dispatch(SendActionCreate(newMessage))\r\n\r\n    return (\r\n            <div>\r\n                <textarea value={newMessage} onChange={changeMessage}>New message</textarea>\r\n                <button onClick={sendMessage}>Send</button>\r\n            </div>\r\n\r\n    );\r\n}\r\n\r\nexport default AddMessage","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport AddMessage from \"./AddMessage\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {DialogType, MessageType} from \"../../redux/dialogsReducer\";\r\n\r\n\r\nfunction Dialogs() {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const dialogElements = useSelector<AppStateType, Array<DialogType>>(state => state.dialogsPage.dialogs)\r\n        .map(dialog => <DialogItem name={dialog.name} id={dialog.id}/>)\r\n    const messagesElements = useSelector<AppStateType, Array<MessageType>>(state => state.dialogsPage.messages)\r\n        .map(m => <Message id={m.id} message={m.message}/>)\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth)\r\n\r\n    if (!isAuth) {\r\n        navigate('/login')\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <AddMessage/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Route, Routes} from \"react-router-dom\";\r\nimport News from \"../News/News\";\r\nimport Music from \"../Music/Music\";\r\nimport Settings from \"../Settings/Settings\";\r\nimport UsersContainer from \"../Users/UsersContainer\";\r\nimport Login from \"../Login/Login\";\r\nimport style from \"./AppRoutes.module.css\"\r\nimport Profile from \"../Profile/Profile\";\r\nimport Dialogs from \"../Dialogs/Dialogs\";\r\n\r\nfunction AppRoutes() {\r\n\r\n    return (\r\n        <div className={style.main}>\r\n            <Routes>\r\n                <Route path={'/dialogs '} element={<Dialogs/>}/>\r\n                <Route path={'/profile/:id'} element={<Profile/>}/>\r\n                <Route path={'/profile/null'} element={<Login/>}/>\r\n                <Route path={'/news'} element={<News/>}/>\r\n                <Route path={'/music'} element={<Music/>}/>\r\n                <Route path={'/settings'} element={<Settings/>}/>\r\n                <Route path={'/dialogs/*'} element={<Dialogs/>}/>\r\n                <Route path={'/'} element={<Profile/>}/>\r\n                <Route path={'/users'} element={<UsersContainer/>}/>\r\n                <Route path={'/login'} element={<Login/>}/>\r\n            </Routes>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppRoutes;","import React, {useEffect} from 'react';\r\nimport '../../App.css';\r\nimport style from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {AuthType, logoutTC, setUserDataTC} from \"../../redux/authReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\n\r\nfunction Header() {\r\n\r\n    const dispatch = useDispatch()\r\n    const state = useSelector<AppStateType, AuthType>(state => state.auth)\r\n\r\n    const logo = 'https://i.pinimg.com/originals/c2/2d/37/c22d37071d21781a60633b7509a15dfc.png'\r\n    const isAuth = state.isAuth\r\n    const logOut = () => dispatch(logoutTC())\r\n\r\n    useEffect(() => {\r\n        dispatch(setUserDataTC())\r\n    }, [])\r\n\r\n    return (\r\n        <div className={style.header}>\r\n            <div className={style.headerContainer}>\r\n                <img src={logo} alt={''}/>\r\n                <div className={style.loginBlock}>\r\n                    {isAuth ? <NavLink to={`/profile/${state.id}`}>{state.login}</NavLink> :\r\n                        <NavLink to={'/login'}>Login</NavLink>}\r\n                </div>\r\n                <div className={style.logout}>\r\n                    {isAuth && <button onClick={logOut}>Log Out</button>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport '../App.css';\r\nimport Nav from \"./Nav/Nav\";\r\nimport AppRoutes from \"./AppRoutes/AppRoutes\";\r\nimport Header from \"./Header/Header\";\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <div className='container'>\r\n                <Nav/>\r\n                <AppRoutes/>\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {dialogsReducer} from \"./dialogsReducer\";\r\nimport {usersReducer} from \"./usersReducer\";\r\nimport {authReducer} from \"./authReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n})\r\n\r\nexport type RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from \"./redux/store\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>,\r\n    document.getElementById('root'));\r\n\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}